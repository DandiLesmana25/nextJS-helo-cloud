# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows  to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
   # Build Next.js
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #     - name: Install Dependencies
  #       run: npm install
  #     - name: Build Application
  #       run: npm run build

  # Docker Build and Push
  docker-build-push:
    # needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nextjs:$COMMIT_SHA .
          docker push ${{ secrets.DOCKER_USERNAME }}/nextjs:$COMMIT_SHA

  # Deploy to Server
  # deploy-to-server:
  #   needs: docker-build-push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to Server
  #       uses: appleboy/ssh-action@v0.1.7
  #       with:
  #         host: ${{ secrets.SERVER_IP }}
  #         username: ${{ secrets.SERVER_USER }}
  #         key: ${{ secrets.SERVER_PRIVATE_KEY }}
  #         script: |
  #           docker pull ${{ secrets.DOCKER_USERNAME }}/nextjs:latest
  #           docker stop nextjs || true
  #           docker rm nextjs || true
  #           docker run -d --name nextjs -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/nextjs:latest

